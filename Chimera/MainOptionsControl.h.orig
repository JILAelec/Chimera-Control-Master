#pragma once

#include "Control.h"
#include "commonTypes.h"


struct mainOptions
{
	bool dontActuallyGenerate;
	bool randomizeVariations;
<<<<<<< HEAD
	bool randomizeRepetitions;
=======
	bool randomizeReps;
	UINT atomThresholdForSkip=UINT_MAX;
>>>>>>> 750e7f923638bc09c2c9486ae03a82546e6e9e7f
};

// this got whittled down recently, but keeping so that I can put more stuff in later.
class MainOptionsControl
{
	public:
		void handleNewConfig( std::ofstream& newFile );
		void handleSaveConfig(std::ofstream& saveFile);
<<<<<<< HEAD
		void handleOpenConfig(std::ifstream& openFile, double version);
		void initialize(int& idStart, POINT& loc, CWnd* parent, cToolTips& tooltips);
		bool handleEvent(UINT id, MainWindow* comm);
=======
		void handleOpenConfig(std::ifstream& openFile, int versionMajor, int versionMinor );
		void initialize(int& idStart, POINT& loc, CWnd* parent, cToolTips& tooltips);
>>>>>>> 750e7f923638bc09c2c9486ae03a82546e6e9e7f
		mainOptions getOptions();
		void rearrange(int width, int height, fontMap fonts);
	private:
		Control<CStatic> header;
		Control<CButton> randomizeVariationsButton;
<<<<<<< HEAD
		Control<CButton> randomizeRepetitionsButton;
=======
		Control<CButton> randomizeRepsButton;
		Control<CStatic> atomThresholdForSkipText;
		Control<CEdit> atomThresholdForSkipEdit;
>>>>>>> 750e7f923638bc09c2c9486ae03a82546e6e9e7f
		mainOptions currentOptions;
};